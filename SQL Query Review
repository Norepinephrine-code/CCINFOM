üß≠ Recommended Thinking Order:
	FROM ‚Üí WHERE ‚Üí SELECT ‚Üí ORDER BY
	Take Note: JOIN is always used with ON.

-------------------------------------------------------------------------------------

üåÜ All cities in Thailand with population > 10,000
	SELECT *
	FROM city
	WHERE countrycode = 'THA' AND population > 10000;

-------------------------------------------------------------------------------------

üåç Countries with life expectancy between 70 and 80
	SELECT *
	FROM country
	WHERE lifeexpectancy BETWEEN 70 AND 80;

-------------------------------------------------------------------------------------

üß≠ Continents of countries with population < 1000
	SELECT continent
	FROM country
	WHERE population < 1000;

-------------------------------------------------------------------------------------

üó∫Ô∏è Unique continents of countries with low population
	SELECT DISTINCT continent
	FROM country
	WHERE population < 1000;

-------------------------------------------------------------------------------------

üïå Countries with Arabic spoken by over 80% of the population
	SELECT countrycode,
	       percentage
	FROM countrylanguage
	WHERE language = 'Arabic' AND percentage > 80;

-------------------------------------------------------------------------------------

üßæ Customers from Singapore, sorted by name
	SELECT c.customernumber,
	       c.customername,
	       c.city
	FROM customers c
	WHERE country = 'Singapore'
	ORDER BY customername ASC;

-------------------------------------------------------------------------------------

üõçÔ∏è Number of products per vendor
	SELECT productvendor, 
	       COUNT(productcode) AS num_of_products
	FROM products
	GROUP BY productvendor
	ORDER BY productvendor;

-------------------------------------------------------------------------------------

üìâ Total payments with formatting
	SELECT FORMAT(SUM(amount), 2) AS totalpayments
	FROM payments
	WHERE YEAR(paymentdate) = 2003;

-------------------------------------------------------------------------------------

üèõÔ∏è Countries with 'Republic' in the government form
	SELECT name, 
	       continent, 
	       governmentform
	FROM country
	WHERE governmentform LIKE '%Republic%';

-------------------------------------------------------------------------------------

üåê Countries where English is spoken (aliased columns)
	SELECT c.name AS country_name, 
	       c.continent AS region
	FROM countrylanguage cl
	JOIN country c ON c.code = cl.countrycode
	WHERE cl.language = 'English'
	ORDER BY c.name;

-------------------------------------------------------------------------------------

üë©‚Äçüíº Total number of employees per office country
	SELECT o.country, 
	       COUNT(e.employeenumber) AS numofemployees
	FROM office o
	JOIN employees e ON o.officecode = e.officecode
	GROUP BY o.country;

-------------------------------------------------------------------------------------

üì¶ Products included in order number 10120
	SELECT DISTINCT p.productname
	FROM products p
	JOIN orderdetails od ON p.productcode = od.productcode
	WHERE od.ordernumber = '10120';

-------------------------------------------------------------------------------------

üìÜ Total sales per year
	SELECT YEAR(o.orderdate) AS year,
	       SUM(od.quantityordered * od.priceeach) AS totalsales
	FROM orders o
	JOIN orderdetails od ON o.ordernumber = od.ordernumber
	GROUP BY YEAR(o.orderdate)
	ORDER BY year;

-------------------------------------------------------------------------------------

üë• Customers and their sales representatives
	SELECT c.customerNumber, 
	       c.customerName, 
	       c.country,
	       e.firstName || ' ' || e.lastName AS fullNameOfSalesRep
	FROM customers c
	JOIN employees e ON c.SalesRepEmployeeNumber = e.employeeNumber;

-------------------------------------------------------------------------------------

üì¶ Shipped orders from May 2005
	SELECT o.orderNumber, 
	       o.orderDate, 
	       o.shippedDate, 
	       o.status, 
	       c.customerName
	FROM orders o
	JOIN customers c ON o.customerNumber = c.customerNumber
	WHERE o.status = 'Shipped' 
	  AND o.shippedDate BETWEEN '2005-05-01' AND '2005-05-31'
	ORDER BY o.ordernumber;

-------------------------------------------------------------------------------------

üìâ Products below 300 pieces
	SELECT p.productCode,
	       p.productName, 
	       p.productLine,
	       p.quantityInStock
	FROM products p
	WHERE p.quantityInStock < 300
	ORDER BY p.productCode;

-------------------------------------------------------------------------------------

üîÅ RIGHT JOIN Syntax
	SELECT columns
	FROM table1
	RIGHT JOIN table2 ON column1 = column2;

-------------------------------------------------------------------------------------

üéì Student donations (LEFT JOIN)
	SELECT s.name, 
	       s.gradelevel, 
	       sd.fruitcode, 
	       sd.qty
	FROM student s
	LEFT JOIN studentdonations sd ON s.name = sd.studentname
	ORDER BY s.name;

-------------------------------------------------------------------------------------

üè¢ Employees and department managers (LEFT JOIN)
	SELECT e.emp_no, 
	       e.last_name, 
	       e.first_name, 
	       dm.dept_no, 
	       dm.from_date 
	FROM employees e
	LEFT JOIN dept_manager dm ON e.emp_no = dm.emp_no
	ORDER BY dm.from_date DESC;

-------------------------------------------------------------------------------------

üè¢ Employees and department managers (RIGHT JOIN)
	SELECT e.emp_no, 
	       e.last_name, 
	       e.first_name, 
	       dm.dept_no, 
	       dm.from_date 
	FROM employees e
	RIGHT JOIN dept_manager dm ON e.emp_no = dm.emp_no
	ORDER BY dm.from_date DESC;

-------------------------------------------------------------------------------------

üéñÔ∏è Employee titles with duplicates (due to history)
	SELECT e.emp_no, 
	       e.last_name, 
	       e.first_name, 
	       t.title
	FROM employees e
	LEFT JOIN titles t ON e.emp_no = t.emp_no
	ORDER BY t.title, e.last_name, e.first_name;

-------------------------------------------------------------------------------------

üèõÔ∏è Department managers with department names
	SELECT d.dept_name, 
	       dm.emp_no, 
	       dm.from_date
	FROM departments d
	LEFT JOIN dept_manager dm ON d.dept_no = dm.dept_no
	ORDER BY d.dept_name, dm.from_date DESC;

-------------------------------------------------------------------------------------

üì¶ Products with low stock and formatted names
	SELECT p.productCode, 
	       CONCAT(p.productLine, ': ', p.productName), 
	       p.productVendor
	FROM products p
	WHERE p.quantityInStock < 100;

-------------------------------------------------------------------------------------

üì¶ Products with name starting with '1999'
	SELECT p.productCode, 
	       CONCAT(p.productLine, ': ', p.productName) AS product, 
	       p.productVendor
	FROM products p
	WHERE SUBSTR(p.productName, 1, 4) = '1999';

-------------------------------------------------------------------------------------

üì¶ Products with names between '1940' and '1950'
	SELECT p.productCode, 
	       CONCAT(p.productLine, ': ', p.productName) AS product, 
	       p.productVendor
	FROM products p
	WHERE SUBSTR(p.productName, 1, 4) >= '1940' 
	  AND SUBSTR(p.productName, 1, 4) <= '1950';

-------------------------------------------------------------------------------------
Notes:
    JOIN               ---> INNER JOIN (columns that exist in both)
    LEFT JOIN          ---> Use FROM TABLE columns
    RIGHT JOIN         ---> Use JOIN TABLE columns
    FULL OUTER JOIN    ---> Use BOTH Table columns

JOIN always needs an ON clause
GROUP BY always needs an aggregating function in the SELECT clause.

Aggregate Functions:
    COUNT() ‚Äì number of rows
    SUM() ‚Äì total of a numeric column
    AVG() ‚Äì average value
    MIN() / MAX() ‚Äì smallest / largest value

WHERE      --->     When values come from the fields
HAVING     --->     When values come from our functions
-------------------------------------------------------------------------------------

SELECT c.customerNumber,
        c.customerName,
        FORMAT(SUM(od.quantityOrdered*od.priceEach), '#,###.##') as TOTALSALES
                                                ------> ROUND(SUM(od.quantityOrdered*od.priceEach), 2) as TOTALSALES
                                                ------> FORMAT(ROUND(SUM(od.quantityOrdered*od.priceEach), 2), '#,###.##') as TOTALSALES
FROM customers c
JOIN orders o
ON o.customerNumber = c.customerNumber
JOIN orderdetails od
ON od.orderNumber = o.orderNumber
WHERE o.status = 'Shipped' AND YEAR (o.orderDate) = '2005'
GROUP BY c.customerNumber, c.customerName
ORDER BY TOTALSALES DESC                            ------> ORDER BY SUM(od.quantityOrdered*od.priceEach) DESC
                                                    ------> It only looks at it as a String    
-------------------------------------------------------------------------------------

SELECT YEAR (o.orderDate) as ORDERYEAR,
			MONTHNAME(o.orderDate) as ORDERMONTH,
			COUNT(o.orderNumber) as NUMORDERS,
            ROUND(SUM(od.quantityOrdered*od.priceEach),2) as TOTALSALES
FROM orders o
JOIN orderdetails od
ON o.orderNumber = od.orderNumber
JOIN products p
ON p.productCode = od.productCode
WHERE p.productLine = 'Classic Cars' AND p.productScale = '1:10'
GROUP BY ORDERYEAR, ORDERMONTH
HAVING TOTALSALES < 100000
ORDER BY ORDERYEAR;

-------------------------------------------------------------------------------------

SELECT YEAR (o.orderDate) as ORDERYEAR,
        e.lastName,
        e.firstName,
        oc.country,
        ROUND(SUM(od.quantityOrdered*od.priceEach),2) as TOTALSALES
FROM    offices oc
JOIN    employees e ON e.officeCode=oc.officeCode
JOIN    customers c ON e.employeeNumber=c.salesRepEployeeNumber
JOIN    orders o ON o.customerNumber=c.customerNumber
JOIN    

-------------------------------------------------------------------------------------








